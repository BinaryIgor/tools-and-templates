/*
 * This file is generated by jOOQ.
 */
package io.codyn.sqldb.schema.project.tables.records;


import io.codyn.sqldb.schema.project.tables.Task;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record7<UUID, UUID, UUID, UUID, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>project.task.id</code>.
     */
    public TaskRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>project.task.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>project.task.project_id</code>.
     */
    public TaskRecord setProjectId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>project.task.project_id</code>.
     */
    public UUID getProjectId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>project.task.creator_id</code>.
     */
    public TaskRecord setCreatorId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>project.task.creator_id</code>.
     */
    public UUID getCreatorId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>project.task.assignee_id</code>.
     */
    public TaskRecord setAssigneeId(UUID value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>project.task.assignee_id</code>.
     */
    public UUID getAssigneeId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>project.task.name</code>.
     */
    public TaskRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>project.task.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>project.task.description</code>.
     */
    public TaskRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>project.task.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>project.task.version</code>.
     */
    public TaskRecord setVersion(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>project.task.version</code>.
     */
    public Long getVersion() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, UUID, UUID, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, UUID, UUID, String, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Task.TASK.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Task.TASK.PROJECT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Task.TASK.CREATOR_ID;
    }

    @Override
    public Field<UUID> field4() {
        return Task.TASK.ASSIGNEE_ID;
    }

    @Override
    public Field<String> field5() {
        return Task.TASK.NAME;
    }

    @Override
    public Field<String> field6() {
        return Task.TASK.DESCRIPTION;
    }

    @Override
    public Field<Long> field7() {
        return Task.TASK.VERSION;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getProjectId();
    }

    @Override
    public UUID component3() {
        return getCreatorId();
    }

    @Override
    public UUID component4() {
        return getAssigneeId();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Long component7() {
        return getVersion();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getProjectId();
    }

    @Override
    public UUID value3() {
        return getCreatorId();
    }

    @Override
    public UUID value4() {
        return getAssigneeId();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public Long value7() {
        return getVersion();
    }

    @Override
    public TaskRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TaskRecord value2(UUID value) {
        setProjectId(value);
        return this;
    }

    @Override
    public TaskRecord value3(UUID value) {
        setCreatorId(value);
        return this;
    }

    @Override
    public TaskRecord value4(UUID value) {
        setAssigneeId(value);
        return this;
    }

    @Override
    public TaskRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public TaskRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TaskRecord value7(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public TaskRecord values(UUID value1, UUID value2, UUID value3, UUID value4, String value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(UUID id, UUID projectId, UUID creatorId, UUID assigneeId, String name, String description, Long version) {
        super(Task.TASK);

        setId(id);
        setProjectId(projectId);
        setCreatorId(creatorId);
        setAssigneeId(assigneeId);
        setName(name);
        setDescription(description);
        setVersion(version);
    }
}
