/*
 * This file is generated by jOOQ.
 */
package io.codyn.commons.sqldb.schema.project;


import io.codyn.commons.sqldb.schema.project.tables.ProjectUser;
import io.codyn.commons.sqldb.schema.project.tables.Task;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Project extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>project</code>
     */
    public static final Project PROJECT = new Project();

    /**
     * The table <code>project.project</code>.
     */
    public final io.codyn.commons.sqldb.schema.project.tables.Project PROJECT_ = io.codyn.commons.sqldb.schema.project.tables.Project.PROJECT_;

    /**
     * The table <code>project.project_user</code>.
     */
    public final ProjectUser PROJECT_USER = ProjectUser.PROJECT_USER;

    /**
     * The table <code>project.task</code>.
     */
    public final Task TASK = Task.TASK;

    /**
     * No further instances allowed
     */
    private Project() {
        super("project", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.PROJECT_VERSION_SEQ,
            Sequences.TASK_VERSION_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            io.codyn.commons.sqldb.schema.project.tables.Project.PROJECT_,
            ProjectUser.PROJECT_USER,
            Task.TASK);
    }
}
