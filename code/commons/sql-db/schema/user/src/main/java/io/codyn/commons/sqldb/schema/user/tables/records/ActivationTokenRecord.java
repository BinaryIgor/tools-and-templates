/*
 * This file is generated by jOOQ.
 */
package io.codyn.commons.sqldb.schema.user.tables.records;


import io.codyn.commons.sqldb.schema.user.tables.ActivationToken;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivationTokenRecord extends UpdatableRecordImpl<ActivationTokenRecord> implements Record4<UUID, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.activation_token.id</code>.
     */
    public ActivationTokenRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.activation_token.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>user.activation_token.token</code>.
     */
    public ActivationTokenRecord setToken(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.activation_token.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.activation_token.expires_at</code>.
     */
    public ActivationTokenRecord setExpiresAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.activation_token.expires_at</code>.
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>user.activation_token.type</code>.
     */
    public ActivationTokenRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.activation_token.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, LocalDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, LocalDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ActivationToken.ACTIVATION_TOKEN.ID;
    }

    @Override
    public Field<String> field2() {
        return ActivationToken.ACTIVATION_TOKEN.TOKEN;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ActivationToken.ACTIVATION_TOKEN.EXPIRES_AT;
    }

    @Override
    public Field<String> field4() {
        return ActivationToken.ACTIVATION_TOKEN.TYPE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getToken();
    }

    @Override
    public LocalDateTime component3() {
        return getExpiresAt();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getToken();
    }

    @Override
    public LocalDateTime value3() {
        return getExpiresAt();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public ActivationTokenRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ActivationTokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    @Override
    public ActivationTokenRecord value3(LocalDateTime value) {
        setExpiresAt(value);
        return this;
    }

    @Override
    public ActivationTokenRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public ActivationTokenRecord values(UUID value1, String value2, LocalDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivationTokenRecord
     */
    public ActivationTokenRecord() {
        super(ActivationToken.ACTIVATION_TOKEN);
    }

    /**
     * Create a detached, initialised ActivationTokenRecord
     */
    public ActivationTokenRecord(UUID id, String token, LocalDateTime expiresAt, String type) {
        super(ActivationToken.ACTIVATION_TOKEN);

        setId(id);
        setToken(token);
        setExpiresAt(expiresAt);
        setType(type);
    }
}
